version: '3'
services:
  server:
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
      - ./../../../Graphs:/Graphs
      - ./../../../agent:/app/agent
    image: autlpdslab/fedflow:rabbitmq
    ports:
      - "5002:5002"
    hostname: server
    depends_on:
      - broker
    deploy:
      resources:
        limits:
          cpus: '3'
        reservations:
          cpus: '3'
      restart_policy:
        condition: on-failure
    working_dir: /fed-flow/app/rl_training/pre_train/runner
    entrypoint: bash -c "python3 /fed-flow/app/rl_training/pre_train/runner/preTrain_server_runner.py -o True -s random_splitting -e True "
  broker:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    hostname: broker

  edge1:
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    image: autlpdslab/fedflow:rabbitmq
    ports:
      - "5001:5001"
    hostname: edge1
    deploy:
      resources:
        limits:
          cpus: '1'
        reservations:
          cpus: '1'
      restart_policy:
        condition: on-failure
    working_dir: /fed-flow/app/rl_training/pre_train/runner
    depends_on:
      - server
      - broker
    entrypoint: bash -c "python3 /fed-flow/app/rl_training/pre_train/runner/preTrain_edge_runner.py -i 0 -o True -s random_splitting -e True & python3 /fed-flow/energy/service.py & wait -n"
  client1:
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    image: autlpdslab/fedflow:rabbitmq
    hostname: client1
    deploy:
      resources:
        limits:
          cpus: '1'
        reservations:
          cpus: '1'
      restart_policy:
        condition: on-failure
    working_dir: /fed-flow/app/rl_training/pre_train/runner
    depends_on:
      - edge1
      - broker
    entrypoint: bash -c "python3 /fed-flow/energy/service.py & python3 /fed-flow/app/rl_training/pre_train/runner/preTrain_client_runner.py -i 0 -o True -s random_splitting -e True & wait -n"