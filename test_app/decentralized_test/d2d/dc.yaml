version: '3'
services:
  broker:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_MAX_MESSAGE_SIZE: 536870912
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3

  server:
    image: autlpdslab/fedflow:latest
    hostname: server
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client2,8082 client1,8081 client4,8084 client3,8083 client5,8085
      --ip server
      --port 8080
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/server
      --node-type server"
    ports:
      - "8080:8080"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
      - ./data:/fed-flow/app/dataset/data
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy

  client1:
    image: autlpdslab/fedflow:latest
    hostname: client1
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client2,8082 server,8080
      --ip client1 --port 8081
      --cluster cluster1
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/client1
      --index 0
      --node-type client"
    ports:
      - "8081:8081"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy

  client2:
    image: autlpdslab/fedflow:latest
    hostname: client2
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client1,8081 server,8080
      --ip client2 --port 8082
      --cluster cluster1
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/client2
      --index 1
      --node-type client"
    ports:
      - "8082:8082"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy

  client3:
    image: autlpdslab/fedflow:latest
    hostname: client3
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client4,8084 client5,8085 server,8080
      --ip client3 --port 8083
      --cluster cluster2
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/client3
      --index 2
      --node-type client"
    ports:
      - "8083:8083"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy

  client4:
    image: autlpdslab/fedflow:latest
    hostname: client4
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client3,8083 client5,8085 server,8080
      --ip client4 --port 8084
      --cluster cluster2
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/client4
      --index 3
      --node-type client"
    ports:
      - "8084:8084"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy

  client5:
    image: autlpdslab/fedflow:latest
    hostname: client5
    working_dir: /fed-flow
    entrypoint: >
      bash -c "python3 /fed-flow/main.py
      --decentralized True
      --d2d True
      --neighbors client3,8083 client4,8084 server,8080
      --ip client5 --port 8085
      --cluster cluster2
      --rabbitmq-url amqp://rabbitmq:rabbitmq@broker:5672/client5
      --index 4
      --node-type client"
    ports:
      - "8085:8085"
    volumes:
      - ./config.py:/fed-flow/app/config/config.py
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      broker:
        condition: service_healthy